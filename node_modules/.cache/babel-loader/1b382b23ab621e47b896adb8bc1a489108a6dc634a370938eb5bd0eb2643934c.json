{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashna.alnisa\\\\Desktop\\\\QuizCraze\\\\react-quiz-app-master\\\\src\\\\components\\\\Auth\\\\LoginForm.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import '../../styles/styles.css';\n\n// const LoginForm = () => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const payload = {\n//       eventID: \"1001\",\n//       addInfo: {\n//         email: email,\n//         password: password\n//       }\n//     };\n\n//     try {\n//       const response = await axios.post('http://localhost:5164/myLogin', payload);\n\n//       console.log('API Response:', response); // Log the entire response for debugging\n//       let res = response.data.rData.rMessage;\n//       if (res === \"Signin Successful\") {\n//         const token = response.data.rData.TOKEN;\n//         localStorage.setItem('currentUser', JSON.stringify({ token }));\n//         navigate('/dashboard');\n//       } else {\n//         alert(response.data.rData.rMessage);\n//         // Clear form inputs on incorrect login\n//         setEmail('');\n//         setPassword('');\n//       }\n//     } catch (error) {\n//       console.error('Error logging in:', error);\n//       alert('An error occurred. Please try again.');\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit} className=\"form\">\n//       <div className=\"form-group\">\n//         <label htmlFor=\"email\">Email</label>\n//         <input\n//           type=\"email\"\n//           id=\"email\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <div className=\"form-group\">\n//         <label htmlFor=\"password\">Password</label>\n//         <input\n//           type=\"password\"\n//           id=\"password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <button type=\"submit\">Login</button>\n//     </form>\n//   );\n// };\n\n// export default LoginForm;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../../styles/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const payload = {\n      eventID: \"1001\",\n      addInfo: {\n        email: email,\n        password: password\n      }\n    };\n    try {\n      const response = await axios.post('http://localhost:5164/myLogin', payload);\n      console.log('API Response:', response); // Log the entire response for debugging\n\n      let res = response.data.rData.rMessage;\n      if (res === \"Signin Successful\") {\n        const token = response.data.rData.TOKEN;\n        const userEmail = response.data.rData.email; // Adjust this according to actual response structure\n\n        console.log('User Email:', userEmail); // Log the userEmail to verify\n\n        // Check if userEmail is valid before storing\n        if (userEmail) {\n          // Store token and userEmail in localStorage\n          localStorage.setItem('currentUser', JSON.stringify({\n            token,\n            email: userEmail\n          }));\n          console.log('Stored in localStorage:', localStorage.getItem('currentUser')); // Verify what's stored\n        } else {\n          console.error('Email not found in API response');\n          alert('Email not found in API response');\n        }\n        navigate('/dashboard');\n      } else {\n        alert(response.data.rData.rMessage);\n        // Clear form inputs on incorrect login\n        setEmail('');\n        setPassword('');\n      }\n    } catch (error) {\n      console.error('Error logging in:', error);\n      alert('An error occurred. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","LoginForm","_s","email","setEmail","password","setPassword","navigate","handleSubmit","e","preventDefault","payload","eventID","addInfo","response","post","console","log","res","data","rData","rMessage","token","TOKEN","userEmail","localStorage","setItem","JSON","stringify","getItem","error","alert","onSubmit","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/ashna.alnisa/Desktop/QuizCraze/react-quiz-app-master/src/components/Auth/LoginForm.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import '../../styles/styles.css';\n\n// const LoginForm = () => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const payload = {\n//       eventID: \"1001\",\n//       addInfo: {\n//         email: email,\n//         password: password\n//       }\n//     };\n\n//     try {\n//       const response = await axios.post('http://localhost:5164/myLogin', payload);\n\n//       console.log('API Response:', response); // Log the entire response for debugging\n//       let res = response.data.rData.rMessage;\n//       if (res === \"Signin Successful\") {\n//         const token = response.data.rData.TOKEN;\n//         localStorage.setItem('currentUser', JSON.stringify({ token }));\n//         navigate('/dashboard');\n//       } else {\n//         alert(response.data.rData.rMessage);\n//         // Clear form inputs on incorrect login\n//         setEmail('');\n//         setPassword('');\n//       }\n//     } catch (error) {\n//       console.error('Error logging in:', error);\n//       alert('An error occurred. Please try again.');\n//     }\n//   };\n\n  \n\n//   return (\n//     <form onSubmit={handleSubmit} className=\"form\">\n//       <div className=\"form-group\">\n//         <label htmlFor=\"email\">Email</label>\n//         <input\n//           type=\"email\"\n//           id=\"email\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <div className=\"form-group\">\n//         <label htmlFor=\"password\">Password</label>\n//         <input\n//           type=\"password\"\n//           id=\"password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <button type=\"submit\">Login</button>\n//     </form>\n//   );\n// };\n\n// export default LoginForm;\n\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../../styles/styles.css';\n\nconst LoginForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n  \n    const payload = {\n      eventID: \"1001\",\n      addInfo: {\n        email: email,\n        password: password\n      }\n    };\n  \n    try {\n      const response = await axios.post('http://localhost:5164/myLogin', payload);\n  \n      console.log('API Response:', response); // Log the entire response for debugging\n  \n      let res = response.data.rData.rMessage;\n      if (res === \"Signin Successful\") {\n        const token = response.data.rData.TOKEN;\n        const userEmail = response.data.rData.email; // Adjust this according to actual response structure\n  \n        console.log('User Email:', userEmail); // Log the userEmail to verify\n  \n        // Check if userEmail is valid before storing\n        if (userEmail) {\n          // Store token and userEmail in localStorage\n          localStorage.setItem('currentUser', JSON.stringify({ token, email: userEmail }));\n          console.log('Stored in localStorage:', localStorage.getItem('currentUser')); // Verify what's stored\n        } else {\n          console.error('Email not found in API response');\n          alert('Email not found in API response');\n        }\n  \n        navigate('/dashboard');\n      } else {\n        alert(response.data.rData.rMessage);\n        // Clear form inputs on incorrect login\n        setEmail('');\n        setPassword('');\n      }\n    } catch (error) {\n      console.error('Error logging in:', error);\n      alert('An error occurred. Please try again.');\n    }\n  };\n  \n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <div className=\"form-group\">\n        <label htmlFor=\"email\">Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"password\">Password</label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n      </div>\n      <button type=\"submit\">Login</button>\n    </form>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}