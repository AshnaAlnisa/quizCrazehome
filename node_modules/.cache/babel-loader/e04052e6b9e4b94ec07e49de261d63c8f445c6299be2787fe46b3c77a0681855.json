{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashna.alnisa\\\\Desktop\\\\QuizCraze\\\\react-quiz-app-master\\\\src\\\\components\\\\Dashboard\\\\MyResults.js\",\n  _s = $RefreshSig$();\n// src/components/Dashboard/MyResults.js\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyResults = () => {\n  _s();\n  // Mock quiz results data (replace with actual data fetching)\n  const [quizResults, setQuizResults] = useState([]);\n  useEffect(() => {\n    // Example of fetching quiz results data (replace with your actual fetch logic)\n    // Mock data for demonstration\n    const mockResults = [{\n      quizId: 1,\n      quizName: 'Quiz 1',\n      score: 80\n    }, {\n      quizId: 2,\n      quizName: 'Quiz 2',\n      score: 75\n    }, {\n      quizId: 3,\n      quizName: 'Quiz 3',\n      score: 90\n    }];\n    setQuizResults(mockResults);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: quizResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: result.quizName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: result.score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(MyResults, \"8zAvpZAl7BrHlTWgdqziyNE2NLI=\");\n_c = MyResults;\nexport default MyResults;\nvar _c;\n$RefreshReg$(_c, \"MyResults\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","MyResults","_s","quizResults","setQuizResults","mockResults","quizId","quizName","score","children","fileName","_jsxFileName","lineNumber","columnNumber","map","result","index","_c","$RefreshReg$"],"sources":["C:/Users/ashna.alnisa/Desktop/QuizCraze/react-quiz-app-master/src/components/Dashboard/MyResults.js"],"sourcesContent":["// src/components/Dashboard/MyResults.js\n\nimport React, { useEffect, useState } from 'react';\n\nconst MyResults = () => {\n  // Mock quiz results data (replace with actual data fetching)\n  const [quizResults, setQuizResults] = useState([]);\n\n  useEffect(() => {\n    // Example of fetching quiz results data (replace with your actual fetch logic)\n    // Mock data for demonstration\n    const mockResults = [\n      { quizId: 1, quizName: 'Quiz 1', score: 80 },\n      { quizId: 2, quizName: 'Quiz 2', score: 75 },\n      { quizId: 3, quizName: 'Quiz 3', score: 90 },\n    ];\n    setQuizResults(mockResults);\n  }, []);\n\n  return (\n    <div>\n      <h2>My Results</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Quiz</th>\n            <th>Score</th>\n          </tr>\n        </thead>\n        <tbody>\n          {quizResults.map((result, index) => (\n            <tr key={index}>\n              <td>{result.quizName}</td>\n              <td>{result.score}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default MyResults;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAElDD,SAAS,CAAC,MAAM;IACd;IACA;IACA,MAAMQ,WAAW,GAAG,CAClB;MAAEC,MAAM,EAAE,CAAC;MAAEC,QAAQ,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAG,CAAC,EAC5C;MAAEF,MAAM,EAAE,CAAC;MAAEC,QAAQ,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAG,CAAC,EAC5C;MAAEF,MAAM,EAAE,CAAC;MAAEC,QAAQ,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAG,CAAC,CAC7C;IACDJ,cAAc,CAACC,WAAW,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBb,OAAA;MAAAS,QAAA,gBACET,OAAA;QAAAS,QAAA,eACET,OAAA;UAAAS,QAAA,gBACET,OAAA;YAAAS,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACbb,OAAA;YAAAS,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRb,OAAA;QAAAS,QAAA,EACGN,WAAW,CAACW,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAC7BhB,OAAA;UAAAS,QAAA,gBACET,OAAA;YAAAS,QAAA,EAAKM,MAAM,CAACR;UAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC1Bb,OAAA;YAAAS,QAAA,EAAKM,MAAM,CAACP;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAFhBG,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACX,EAAA,CApCID,SAAS;AAAAgB,EAAA,GAAThB,SAAS;AAsCf,eAAeA,SAAS;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}