{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NCS\\\\Desktop\\\\21july\\\\QuizCraze16-master\\\\src\\\\components\\\\Admin\\\\QuizManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport QuizItem from '../Quiz/QuizItem';\nimport '../../styles/quizManagement.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizManagement = () => {\n  _s();\n  const [quizzes, setQuizzes] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    // Mock data fetching function (replace with actual API call)\n    const fetchQuizzes = async () => {\n      const mockQuizzes = [{\n        id: 1,\n        title: 'Quiz 1',\n        description: 'Description of Quiz 1',\n        questions: [{\n          text: 'What is 2 + 2?',\n          options: [{\n            text: '3'\n          }, {\n            text: '4'\n          }, {\n            text: '5'\n          }]\n        }]\n      }];\n      setQuizzes(mockQuizzes);\n    };\n    fetchQuizzes();\n  }, []);\n  const handleDeleteQuiz = quizId => {\n    setQuizzes(quizzes.filter(quiz => quiz.id !== quizId));\n  };\n  const handleEditQuiz = quiz => {\n    history.push(`/edit-quiz/${quiz.id}`);\n  };\n  const handleCreateQuiz = () => {\n    history.push('/create-quiz');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Quiz Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), quizzes.map(quiz => /*#__PURE__*/_jsxDEV(QuizItem, {\n      quiz: quiz,\n      onEditQuiz: handleEditQuiz,\n      onDeleteQuiz: handleDeleteQuiz\n    }, quiz.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateQuiz,\n      children: \"Create New Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizManagement, \"FXe+bfZIheUQHdyAWm8RJfikmyY=\", false, function () {\n  return [useHistory];\n});\n_c = QuizManagement;\nexport default QuizManagement;\nvar _c;\n$RefreshReg$(_c, \"QuizManagement\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","QuizItem","jsxDEV","_jsxDEV","QuizManagement","_s","quizzes","setQuizzes","history","fetchQuizzes","mockQuizzes","id","title","description","questions","text","options","handleDeleteQuiz","quizId","filter","quiz","handleEditQuiz","push","handleCreateQuiz","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onEditQuiz","onDeleteQuiz","onClick","_c","$RefreshReg$"],"sources":["C:/Users/NCS/Desktop/21july/QuizCraze16-master/src/components/Admin/QuizManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport QuizItem from '../Quiz/QuizItem';\nimport '../../styles/quizManagement.css';\n\nconst QuizManagement = () => {\n  const [quizzes, setQuizzes] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    // Mock data fetching function (replace with actual API call)\n    const fetchQuizzes = async () => {\n      const mockQuizzes = [\n        {\n          id: 1,\n          title: 'Quiz 1',\n          description: 'Description of Quiz 1',\n          questions: [\n            {\n              text: 'What is 2 + 2?',\n              options: [\n                { text: '3' },\n                { text: '4' },\n                { text: '5' },\n              ],\n            },\n          ],\n        },\n      ];\n      setQuizzes(mockQuizzes);\n    };\n\n    fetchQuizzes();\n  }, []);\n\n  const handleDeleteQuiz = (quizId) => {\n    setQuizzes(quizzes.filter(quiz => quiz.id !== quizId));\n  };\n\n  const handleEditQuiz = (quiz) => {\n    history.push(`/edit-quiz/${quiz.id}`);\n  };\n\n  const handleCreateQuiz = () => {\n    history.push('/create-quiz');\n  };\n\n  return (\n    <div>\n      <h2>Quiz Management</h2>\n      {quizzes.map(quiz => (\n        <QuizItem\n          key={quiz.id}\n          quiz={quiz}\n          onEditQuiz={handleEditQuiz}\n          onDeleteQuiz={handleDeleteQuiz}\n        />\n      ))}\n      <button onClick={handleCreateQuiz}>Create New Quiz</button>\n    </div>\n  );\n};\n\nexport default QuizManagement;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMU,OAAO,GAAGR,UAAU,CAAC,CAAC;EAE5BD,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,WAAW,GAAG,CAClB;QACEC,EAAE,EAAE,CAAC;QACLC,KAAK,EAAE,QAAQ;QACfC,WAAW,EAAE,uBAAuB;QACpCC,SAAS,EAAE,CACT;UACEC,IAAI,EAAE,gBAAgB;UACtBC,OAAO,EAAE,CACP;YAAED,IAAI,EAAE;UAAI,CAAC,EACb;YAAEA,IAAI,EAAE;UAAI,CAAC,EACb;YAAEA,IAAI,EAAE;UAAI,CAAC;QAEjB,CAAC;MAEL,CAAC,CACF;MACDR,UAAU,CAACG,WAAW,CAAC;IACzB,CAAC;IAEDD,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,gBAAgB,GAAIC,MAAM,IAAK;IACnCX,UAAU,CAACD,OAAO,CAACa,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACT,EAAE,KAAKO,MAAM,CAAC,CAAC;EACxD,CAAC;EAED,MAAMG,cAAc,GAAID,IAAI,IAAK;IAC/BZ,OAAO,CAACc,IAAI,CAAC,cAAcF,IAAI,CAACT,EAAE,EAAE,CAAC;EACvC,CAAC;EAED,MAAMY,gBAAgB,GAAGA,CAAA,KAAM;IAC7Bf,OAAO,CAACc,IAAI,CAAC,cAAc,CAAC;EAC9B,CAAC;EAED,oBACEnB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBtB,OAAO,CAACuB,GAAG,CAACT,IAAI,iBACfjB,OAAA,CAACF,QAAQ;MAEPmB,IAAI,EAAEA,IAAK;MACXU,UAAU,EAAET,cAAe;MAC3BU,YAAY,EAAEd;IAAiB,GAH1BG,IAAI,CAACT,EAAE;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIb,CACF,CAAC,eACFzB,OAAA;MAAQ6B,OAAO,EAAET,gBAAiB;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEV,CAAC;AAACvB,EAAA,CAxDID,cAAc;EAAA,QAEFJ,UAAU;AAAA;AAAAiC,EAAA,GAFtB7B,cAAc;AA0DpB,eAAeA,cAAc;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}