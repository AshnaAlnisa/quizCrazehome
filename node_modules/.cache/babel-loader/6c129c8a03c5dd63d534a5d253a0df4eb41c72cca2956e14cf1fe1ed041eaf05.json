{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashna.alnisa\\\\Desktop\\\\QuizCraze\\\\react-quiz-app-master\\\\src\\\\components\\\\Quiz\\\\QuizList.js\",\n  _s = $RefreshSig$();\n// src/components/Quiz/QuizList.js\n\nimport React, { useState, useEffect } from 'react';\nimport '../../styles/quizList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizList = () => {\n  _s();\n  const [quizzes, setQuizzes] = useState([]);\n  const [selectedQuiz, setSelectedQuiz] = useState(null);\n  const [selectedOptions, setSelectedOptions] = useState({});\n  const [timer, setTimer] = useState(null);\n  useEffect(() => {\n    // Mock data fetching function (replace with actual API call)\n    const fetchQuizzes = async () => {\n      const mockQuizzes = [{\n        id: 1,\n        title: 'Quiz 1',\n        description: 'Description of Quiz 1',\n        questions: [{\n          id: 1,\n          question: 'Question 1',\n          options: ['Option 1', 'Option 2', 'Option 3', 'Option 4']\n        }, {\n          id: 2,\n          question: 'Question 2',\n          options: ['Option 1', 'Option 2', 'Option 3', 'Option 4']\n        }]\n      }, {\n        id: 2,\n        title: 'Quiz 2',\n        description: 'Description of Quiz 2',\n        questions: [{\n          id: 1,\n          question: 'Question 1',\n          options: ['Option 1', 'Option 2', 'Option 3', 'Option 4']\n        }, {\n          id: 2,\n          question: 'Question 2',\n          options: ['Option 1', 'Option 2', 'Option 3', 'Option 4']\n        }]\n      }, {\n        id: 3,\n        title: 'Quiz 3',\n        description: 'Description of Quiz 3',\n        questions: [{\n          id: 1,\n          question: 'Question 1',\n          options: ['Option 1', 'Option 2', 'Option 3', 'Option 4']\n        }, {\n          id: 2,\n          question: 'Question 2',\n          options: ['Option 1', 'Option 2', 'Option 3', 'Option 4']\n        }]\n      }];\n      setQuizzes(mockQuizzes);\n    };\n    fetchQuizzes();\n  }, []);\n  useEffect(() => {\n    if (selectedQuiz) {\n      // Start timer when quiz is selected\n      const startTime = Date.now();\n      const interval = setInterval(() => {\n        const elapsedTime = Date.now() - startTime;\n        setTimer(Math.floor(elapsedTime / 1000)); // Update timer every second\n      }, 1000);\n      return () => clearInterval(interval); // Cleanup on unmount or change\n    }\n  }, [selectedQuiz]);\n  const handleStartQuiz = quiz => {\n    setSelectedQuiz(quiz);\n    setSelectedOptions({});\n    setTimer(0); // Reset timer when starting a new quiz\n  };\n  const handleOptionSelect = (questionId, option) => {\n    setSelectedOptions({\n      ...selectedOptions,\n      [questionId]: option\n    });\n    console.log(`Selected option for question ${questionId}: ${option}`);\n  };\n  const renderQuizQuestions = quiz => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: quiz.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: quiz.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: [\"Timer: \", timer, \" seconds\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: quiz.questions.map(q => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: q.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: q.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: selectedOptions[q.id] === option ? 'selected-option' : '',\n            onClick: () => handleOptionSelect(q.id, option),\n            children: option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, q.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setSelectedQuiz(null),\n      children: \"Back to Quizzes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Quizzes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), !selectedQuiz ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: quizzes.map(quiz => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: quiz.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: quiz.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleStartQuiz(quiz),\n          children: \"Start Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this)]\n      }, quiz.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this) : renderQuizQuestions(selectedQuiz)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizList, \"XeUG8dxJCObns/Sml0KBMqbUsEw=\");\n_c = QuizList;\nexport default QuizList;\nvar _c;\n$RefreshReg$(_c, \"QuizList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","QuizList","_s","quizzes","setQuizzes","selectedQuiz","setSelectedQuiz","selectedOptions","setSelectedOptions","timer","setTimer","fetchQuizzes","mockQuizzes","id","title","description","questions","question","options","startTime","Date","now","interval","setInterval","elapsedTime","Math","floor","clearInterval","handleStartQuiz","quiz","handleOptionSelect","questionId","option","console","log","renderQuizQuestions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","q","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ashna.alnisa/Desktop/QuizCraze/react-quiz-app-master/src/components/Quiz/QuizList.js"],"sourcesContent":["// src/components/Quiz/QuizList.js\n\nimport React, { useState, useEffect } from 'react';\nimport '../../styles/quizList.css';\n\nconst QuizList = () => {\n  const [quizzes, setQuizzes] = useState([]);\n  const [selectedQuiz, setSelectedQuiz] = useState(null);\n  const [selectedOptions, setSelectedOptions] = useState({});\n  const [timer, setTimer] = useState(null);\n\n  useEffect(() => {\n    // Mock data fetching function (replace with actual API call)\n    const fetchQuizzes = async () => {\n      const mockQuizzes = [\n        {\n          id: 1,\n          title: 'Quiz 1',\n          description: 'Description of Quiz 1',\n          questions: [\n            { id: 1, question: 'Question 1', options: ['Option 1', 'Option 2', 'Option 3', 'Option 4'] },\n            { id: 2, question: 'Question 2', options: ['Option 1', 'Option 2', 'Option 3', 'Option 4'] },\n          ]\n        },\n        {\n          id: 2,\n          title: 'Quiz 2',\n          description: 'Description of Quiz 2',\n          questions: [\n            { id: 1, question: 'Question 1', options: ['Option 1', 'Option 2', 'Option 3', 'Option 4'] },\n            { id: 2, question: 'Question 2', options: ['Option 1', 'Option 2', 'Option 3', 'Option 4'] },\n          ]\n        },\n        {\n          id: 3,\n          title: 'Quiz 3',\n          description: 'Description of Quiz 3',\n          questions: [\n            { id: 1, question: 'Question 1', options: ['Option 1', 'Option 2', 'Option 3', 'Option 4'] },\n            { id: 2, question: 'Question 2', options: ['Option 1', 'Option 2', 'Option 3', 'Option 4'] },\n          ]\n        },\n      ];\n      setQuizzes(mockQuizzes);\n    };\n\n    fetchQuizzes();\n  }, []);\n\n  useEffect(() => {\n    if (selectedQuiz) {\n      // Start timer when quiz is selected\n      const startTime = Date.now();\n      const interval = setInterval(() => {\n        const elapsedTime = Date.now() - startTime;\n        setTimer(Math.floor(elapsedTime / 1000)); // Update timer every second\n      }, 1000);\n\n      return () => clearInterval(interval); // Cleanup on unmount or change\n    }\n  }, [selectedQuiz]);\n\n  const handleStartQuiz = (quiz) => {\n    setSelectedQuiz(quiz);\n    setSelectedOptions({});\n    setTimer(0); // Reset timer when starting a new quiz\n  };\n\n  const handleOptionSelect = (questionId, option) => {\n    setSelectedOptions({\n      ...selectedOptions,\n      [questionId]: option,\n    });\n    console.log(`Selected option for question ${questionId}: ${option}`);\n  };\n\n  const renderQuizQuestions = (quiz) => (\n    <div className=\"quiz-details\">\n      <h3>{quiz.title}</h3>\n      <p>{quiz.description}</p>\n      <div className=\"timer\">Timer: {timer} seconds</div>\n      <ul>\n        {quiz.questions.map(q => (\n          <li key={q.id}>\n            <p>{q.question}</p>\n            <ul>\n              {q.options.map((option, index) => (\n                <li\n                  key={index}\n                  className={selectedOptions[q.id] === option ? 'selected-option' : ''}\n                  onClick={() => handleOptionSelect(q.id, option)}\n                >\n                  {option}\n                </li>\n              ))}\n            </ul>\n          </li>\n        ))}\n      </ul>\n      <button onClick={() => setSelectedQuiz(null)}>Back to Quizzes</button>\n    </div>\n  );\n\n  return (\n    <div className=\"quiz-list\">\n      <h2>Available Quizzes</h2>\n      {!selectedQuiz ? (\n        <ul>\n          {quizzes.map(quiz => (\n            <li key={quiz.id}>\n              <h3>{quiz.title}</h3>\n              <p>{quiz.description}</p>\n              <button onClick={() => handleStartQuiz(quiz)}>Start Quiz</button>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        renderQuizQuestions(selectedQuiz)\n      )}\n    </div>\n  );\n};\n\nexport default QuizList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}