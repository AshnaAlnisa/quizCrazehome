{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashna.alnisa\\\\Desktop\\\\QuizCraze\\\\react-quiz-app-master\\\\src\\\\components\\\\Auth\\\\ChangePassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChangePassword = () => {\n  _s();\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [email, setEmail] = useState('');\n  useEffect(() => {\n    // Retrieve the email from local storage\n    const storedEmail = localStorage.getItem('userEmail'); // Adjust key as needed\n    if (storedEmail) {\n      setEmail(storedEmail);\n    }\n  }, []);\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    // Validate password confirmation\n    if (newPassword !== confirmPassword) {\n      setError(\"New password and confirm password don't match.\");\n      return;\n    }\n\n    // Clear previous messages\n    setError('');\n    setSuccessMessage('');\n\n    // Prepare the request payload\n    const requestData = {\n      eventID: \"1001\",\n      addInfo: {\n        email,\n        // Use email from local storage\n        currentPassword,\n        newPassword\n      }\n    };\n    try {\n      // Make the API call to change the password\n      const response = await fetch('/api/changePassword', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestData)\n      });\n      const data = await response.json();\n\n      // Handle response\n      if (data.rStatus === 0) {\n        setSuccessMessage(data.rData.rMessage);\n      } else {\n        setError(data.rData.rMessage);\n      }\n\n      // Clear form fields\n      setCurrentPassword('');\n      setNewPassword('');\n      setConfirmPassword('');\n    } catch (err) {\n      setError(\"An error occurred while changing the password.\");\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Change Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Current Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: currentPassword,\n          onChange: e => setCurrentPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(ChangePassword, \"Zi2mEsWkiSNBuUEwQmIsPJbq62k=\");\n_c = ChangePassword;\nexport default ChangePassword;\nvar _c;\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ChangePassword","_s","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","error","setError","successMessage","setSuccessMessage","email","setEmail","storedEmail","localStorage","getItem","handleSubmit","event","preventDefault","requestData","eventID","addInfo","response","fetch","method","headers","body","JSON","stringify","data","json","rStatus","rData","rMessage","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["C:/Users/ashna.alnisa/Desktop/QuizCraze/react-quiz-app-master/src/components/Auth/ChangePassword.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst ChangePassword = () => {\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [email, setEmail] = useState('');\n\n  useEffect(() => {\n    // Retrieve the email from local storage\n    const storedEmail = localStorage.getItem('userEmail'); // Adjust key as needed\n    if (storedEmail) {\n      setEmail(storedEmail);\n    }\n  }, []);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    // Validate password confirmation\n    if (newPassword !== confirmPassword) {\n      setError(\"New password and confirm password don't match.\");\n      return;\n    }\n\n    // Clear previous messages\n    setError('');\n    setSuccessMessage('');\n\n    // Prepare the request payload\n    const requestData = {\n      eventID: \"1001\",\n      addInfo: {\n        email, // Use email from local storage\n        currentPassword,\n        newPassword,\n      },\n    };\n\n    try {\n      // Make the API call to change the password\n      const response = await fetch('/api/changePassword', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(requestData),\n      });\n\n      const data = await response.json();\n\n      // Handle response\n      if (data.rStatus === 0) {\n        setSuccessMessage(data.rData.rMessage);\n      } else {\n        setError(data.rData.rMessage);\n      }\n\n      // Clear form fields\n      setCurrentPassword('');\n      setNewPassword('');\n      setConfirmPassword('');\n    } catch (err) {\n      setError(\"An error occurred while changing the password.\");\n      console.error(err);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Change Password</h2>\n      {error && <div className=\"error-message\">{error}</div>}\n      {successMessage && <div className=\"success-message\">{successMessage}</div>}\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Current Password:</label>\n          <input\n            type=\"password\"\n            value={currentPassword}\n            onChange={(e) => setCurrentPassword(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label>New Password:</label>\n          <input\n            type=\"password\"\n            value={newPassword}\n            onChange={(e) => setNewPassword(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label>Confirm New Password:</label>\n          <input\n            type=\"password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n            required\n          />\n        </div>\n        <button type=\"submit\">Change Password</button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChangePassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}