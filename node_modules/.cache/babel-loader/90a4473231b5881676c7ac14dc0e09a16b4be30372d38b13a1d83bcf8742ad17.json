{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NCS\\\\Desktop\\\\21july\\\\QuizCraze16-master\\\\src\\\\components\\\\Quiz\\\\QuizList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../../styles/quizList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizList = () => {\n  _s();\n  const [quizzes, setQuizzes] = useState([]);\n  const [selectedQuiz, setSelectedQuiz] = useState(null);\n  const [selectedOptions, setSelectedOptions] = useState({});\n  const [timer, setTimer] = useState(null);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [score, setScore] = useState(0);\n  useEffect(() => {\n    // Mock data fetching function (replace with actual API call)\n    const fetchQuizzes = async () => {\n      const mockQuizzes = [{\n        id: 1,\n        title: 'Quiz 1',\n        description: 'Description of Quiz 1',\n        questions: [{\n          id: 1,\n          question: 'Question 1',\n          options: ['Option 1', 'Option 2', 'Option 3', 'Option 4'],\n          correctAnswer: 'Option 2'\n        }, {\n          id: 2,\n          question: 'Question 2',\n          options: ['Option 1', 'Option 2', 'Option 3', 'Option 4'],\n          correctAnswer: 'Option 3'\n        }]\n      }, {\n        id: 2,\n        title: 'Quiz 2',\n        description: 'Description of Quiz 2',\n        questions: [{\n          id: 1,\n          question: 'Question 1',\n          options: ['Option 1', 'Option 2', 'Option 3', 'Option 4'],\n          correctAnswer: 'Option 1'\n        }, {\n          id: 2,\n          question: 'Question 2',\n          options: ['Option 1', 'Option 2', 'Option 3', 'Option 4'],\n          correctAnswer: 'Option 4'\n        }]\n      }, {\n        id: 3,\n        title: 'Quiz 3',\n        description: 'Description of Quiz 3',\n        questions: [{\n          id: 1,\n          question: 'Question 1',\n          options: ['Option 1', 'Option 2', 'Option 3', 'Option 4'],\n          correctAnswer: 'Option 3'\n        }, {\n          id: 2,\n          question: 'Question 2',\n          options: ['Option 1', 'Option 2', 'Option 3', 'Option 4'],\n          correctAnswer: 'Option 2'\n        }]\n      }];\n      setQuizzes(mockQuizzes);\n    };\n    fetchQuizzes();\n  }, []);\n  useEffect(() => {\n    if (selectedQuiz) {\n      // Start timer when quiz is selected\n      const startTime = Date.now();\n      const interval = setInterval(() => {\n        const elapsedTime = Date.now() - startTime;\n        setTimer(Math.floor(elapsedTime / 1000)); // Update timer every second\n      }, 1000);\n      return () => clearInterval(interval); // Cleanup on unmount or change\n    }\n  }, [selectedQuiz]);\n  const handleStartQuiz = quiz => {\n    setSelectedQuiz(quiz);\n    setSelectedOptions({});\n    setTimer(0); // Reset timer when starting a new quiz\n    setIsSubmitted(false); // Reset submission state\n    setScore(0); // Reset score\n  };\n  const handleOptionSelect = (questionId, option) => {\n    setSelectedOptions({\n      ...selectedOptions,\n      [questionId]: option\n    });\n    console.log(`Selected option for question ${questionId}: ${option}`);\n  };\n  const handleSubmitQuiz = () => {\n    if (selectedQuiz) {\n      let newScore = 0;\n      selectedQuiz.questions.forEach(question => {\n        if (selectedOptions[question.id] === question.correctAnswer) {\n          newScore += 1;\n        }\n      });\n      setScore(newScore);\n      setIsSubmitted(true);\n    }\n  };\n  const renderQuizQuestions = quiz => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: quiz.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: quiz.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: [\"Timer: \", timer, \" seconds\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: quiz.questions.map(q => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: q.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: q.options.map((option, index) => {\n            let className = '';\n            if (isSubmitted) {\n              if (option === q.correctAnswer) {\n                className = 'correct-option';\n              } else if (selectedOptions[q.id] === option) {\n                className = 'incorrect-option';\n              }\n            } else if (selectedOptions[q.id] === option) {\n              className = 'selected-option';\n            }\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: className,\n              onClick: () => handleOptionSelect(q.id, option),\n              children: option\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, q.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmitQuiz,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), isSubmitted && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your score: \", score, \" out of \", quiz.questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setSelectedQuiz(null),\n      children: \"Back to Quizzes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Quizzes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), !selectedQuiz ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: quizzes.map(quiz => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: quiz.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: quiz.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleStartQuiz(quiz),\n          children: \"Start Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this)]\n      }, quiz.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this) : renderQuizQuestions(selectedQuiz)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizList, \"eUv5JE6EMSzv/sGEsZdJphvjhfo=\");\n_c = QuizList;\nexport default QuizList;\nvar _c;\n$RefreshReg$(_c, \"QuizList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","QuizList","_s","quizzes","setQuizzes","selectedQuiz","setSelectedQuiz","selectedOptions","setSelectedOptions","timer","setTimer","isSubmitted","setIsSubmitted","score","setScore","fetchQuizzes","mockQuizzes","id","title","description","questions","question","options","correctAnswer","startTime","Date","now","interval","setInterval","elapsedTime","Math","floor","clearInterval","handleStartQuiz","quiz","handleOptionSelect","questionId","option","console","log","handleSubmitQuiz","newScore","forEach","renderQuizQuestions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","q","index","onClick","length","_c","$RefreshReg$"],"sources":["C:/Users/NCS/Desktop/21july/QuizCraze16-master/src/components/Quiz/QuizList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../../styles/quizList.css';\n\nconst QuizList = () => {\n  const [quizzes, setQuizzes] = useState([]);\n  const [selectedQuiz, setSelectedQuiz] = useState(null);\n  const [selectedOptions, setSelectedOptions] = useState({});\n  const [timer, setTimer] = useState(null);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [score, setScore] = useState(0);\n\n  useEffect(() => {\n    // Mock data fetching function (replace with actual API call)\n    const fetchQuizzes = async () => {\n      const mockQuizzes = [\n        {\n          id: 1,\n          title: 'Quiz 1',\n          description: 'Description of Quiz 1',\n          questions: [\n            { id: 1, question: 'Question 1', options: ['Option 1', 'Option 2', 'Option 3', 'Option 4'], correctAnswer: 'Option 2' },\n            { id: 2, question: 'Question 2', options: ['Option 1', 'Option 2', 'Option 3', 'Option 4'], correctAnswer: 'Option 3' },\n          ]\n        },\n        {\n          id: 2,\n          title: 'Quiz 2',\n          description: 'Description of Quiz 2',\n          questions: [\n            { id: 1, question: 'Question 1', options: ['Option 1', 'Option 2', 'Option 3', 'Option 4'], correctAnswer: 'Option 1' },\n            { id: 2, question: 'Question 2', options: ['Option 1', 'Option 2', 'Option 3', 'Option 4'], correctAnswer: 'Option 4' },\n          ]\n        },\n        {\n          id: 3,\n          title: 'Quiz 3',\n          description: 'Description of Quiz 3',\n          questions: [\n            { id: 1, question: 'Question 1', options: ['Option 1', 'Option 2', 'Option 3', 'Option 4'], correctAnswer: 'Option 3' },\n            { id: 2, question: 'Question 2', options: ['Option 1', 'Option 2', 'Option 3', 'Option 4'], correctAnswer: 'Option 2' },\n          ]\n        },\n      ];\n      setQuizzes(mockQuizzes);\n    };\n\n    fetchQuizzes();\n  }, []);\n\n  useEffect(() => {\n    if (selectedQuiz) {\n      // Start timer when quiz is selected\n      const startTime = Date.now();\n      const interval = setInterval(() => {\n        const elapsedTime = Date.now() - startTime;\n        setTimer(Math.floor(elapsedTime / 1000)); // Update timer every second\n      }, 1000);\n\n      return () => clearInterval(interval); // Cleanup on unmount or change\n    }\n  }, [selectedQuiz]);\n\n  const handleStartQuiz = (quiz) => {\n    setSelectedQuiz(quiz);\n    setSelectedOptions({});\n    setTimer(0); // Reset timer when starting a new quiz\n    setIsSubmitted(false); // Reset submission state\n    setScore(0); // Reset score\n  };\n\n  const handleOptionSelect = (questionId, option) => {\n    setSelectedOptions({\n      ...selectedOptions,\n      [questionId]: option,\n    });\n    console.log(`Selected option for question ${questionId}: ${option}`);\n  };\n\n  const handleSubmitQuiz = () => {\n    if (selectedQuiz) {\n      let newScore = 0;\n      selectedQuiz.questions.forEach(question => {\n        if (selectedOptions[question.id] === question.correctAnswer) {\n          newScore += 1;\n        }\n      });\n      setScore(newScore);\n      setIsSubmitted(true);\n    }\n  };\n\n  const renderQuizQuestions = (quiz) => (\n    <div className=\"quiz-details\">\n      <h3>{quiz.title}</h3>\n      <p>{quiz.description}</p>\n      <div className=\"timer\">Timer: {timer} seconds</div>\n      <ul>\n        {quiz.questions.map(q => (\n          <li key={q.id}>\n            <p>{q.question}</p>\n            <ul>\n              {q.options.map((option, index) => {\n                let className = '';\n                if (isSubmitted) {\n                  if (option === q.correctAnswer) {\n                    className = 'correct-option';\n                  } else if (selectedOptions[q.id] === option) {\n                    className = 'incorrect-option';\n                  }\n                } else if (selectedOptions[q.id] === option) {\n                  className = 'selected-option';\n                }\n                return (\n                  <li\n                    key={index}\n                    className={className}\n                    onClick={() => handleOptionSelect(q.id, option)}\n                  >\n                    {option}\n                  </li>\n                );\n              })}\n            </ul>\n          </li>\n        ))}\n      </ul>\n      <button onClick={handleSubmitQuiz}>Submit</button>\n      {isSubmitted && <p>Your score: {score} out of {quiz.questions.length}</p>}\n      <button onClick={() => setSelectedQuiz(null)}>Back to Quizzes</button>\n    </div>\n  );\n\n  return (\n    <div className=\"quiz-list\">\n      <h2>Available Quizzes</h2>\n      {!selectedQuiz ? (\n        <ul>\n          {quizzes.map(quiz => (\n            <li key={quiz.id}>\n              <h3>{quiz.title}</h3>\n              <p>{quiz.description}</p>\n              <button onClick={() => handleStartQuiz(quiz)}>Start Quiz</button>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        renderQuizQuestions(selectedQuiz)\n      )}\n    </div>\n  );\n};\n\nexport default QuizList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}